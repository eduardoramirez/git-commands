#!/bin/sh

fatal() {
    local RED="\033[0;31m"
    local BOLD="\033[1m"
    local RESET="\033[0m"
    printf "${RED}${BOLD}Error: %s${RESET}\n" "$1" >&2
    exit 1
}

info() {
    local BLUE="\033[0;34m"
    local RESET="\033[0m"
    printf "${BLUE}> %s${RESET}\n" "$1"
}

success() {
    local GREEN="\033[0;32m"
    local RESET="\033[0m"
    printf "${GREEN}> %s${RESET}\n" "$1"
}

# Check for correct usage
if [ $# -lt 1 ]; then
    fatal "Incorrect usage, missing branch name. Use: git start [feature]"
fi

new_branch_name="$1"

# Check for uncommitted changes
if [[ $(git status --porcelain) ]]; then
    fatal "You have uncommitted changes, proceeding automatically would be dangerous."
fi

# Check if branch already exists
if git show-ref --verify --quiet refs/heads/"$new_branch_name"; then
    fatal "A branch called '$new_branch_name' already exists."
fi

# Update the main branch
main_branch=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
if [ -z "$main_branch" ] || [ "$main_branch" == "(unknown)" ]; then
    fatal "Unable to identify the main branch."
fi

git checkout "$main_branch"
git remote update --prune
git pull origin "$main_branch" --no-tags

# Create and checkout new branch
info "Creating new branch '$new_branch_name'"
git checkout -b "$new_branch_name"

success "New feature branch created for '$new_branch_name'."
